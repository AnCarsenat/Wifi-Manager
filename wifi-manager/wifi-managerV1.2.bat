if not defined in_subprocess (cmd /k set in_subprocess=y ^& %0 %*) & exit )
echo off
cls
echo _________________
echo [31mwifi auto_connect[0m
echo  by [33m AnCarsenat[0m
echo _________________
powershell.exe -Command "Start-Sleep -MilliSeconds 1500"
cls
:main_menu
echo Choose action to realise :
echo 1 : Show wifis
echo 2 : Connect
echo 3 : Advanced Connect
echo 4 : Setup Auto-Connect
echo 5 : Show wifi password
echo 6 : Import-Export config
echo 7 : Modules
choice /M "" /N /C 1234567
goto menu%errorlevel%

:menu10
echo Head back to main menu
choice /M "" 
if "%errorlevel%"=="1" (
cls
goto main_menu
) else (exit)

:menu1
Netsh wlan show profiles
goto menu10

:menu2
set /p profile_name="Wifi-Name : "
netsh wlan connect %profile_name%
goto menu10

:menu3
echo Menu currently unavailable
goto menu10

:menu4
echo Auto connect starting
goto auto-connect-writer
goto menu10


:menu5
setlocal enabledelayedexpansion
echo\________show wifi_pwd________
echo Show-Hide password
echo\_____________________________
set /p wifi_name="Wifi name: "
echo\
:: Debugging step: Check if the wifi_name is set correctly
echo The wifi name you entered is: !wifi_name!

if not exist "%cd%\wifi-temp" mkdir "%cd%\wifi-temp"

:: Execute the command and redirect output to a temporary file
echo Running: netsh wlan show profile name="!wifi_name!" key=clear
netsh wlan show profile name="!wifi_name!" key=clear > "%cd%\wifi-temp\temp_output.txt" 2>nul

:: Check if the temporary file was created
if not exist "%cd%\wifi-temp\temp_output.txt" (
    echo Failed to retrieve WiFi profile. Please check the WiFi name and try again.
    pause
    goto end
)

:: Initialize the output file
rem echo rem File generated by batch > "%cd%\wifi-temp\output.txt"

:: Process the temporary file with FOR /F loop
set line_count=0
set target_line=28

:: Read the file line by line
for /F "tokens=*" %%a in (%cd%\wifi-temp\temp_output.txt) do (
    set /a line_count+=1
    
    :: Debug: Show current line count and line content
    rem echo Line !line_count!: %%a
    
    if !line_count! equ !target_line! (
        echo %%a > "%cd%\wifi-temp\output.txt"
    )
)

:: Display the specific line from the output file
echo\
echo\__________wifi_pwd__________

echo [31m
type "%cd%\wifi-temp\output.txt"
echo [0m

echo\____________________________
pause

:: Clean up
del "%cd%\wifi-temp\output.txt"
del "%cd%\wifi-temp\temp_output.txt"

endlocal
goto menu10


:menu6

echo Import-Export wifi configs
echo Import: 1
echo Export: 2
echo ShowConfigs: 3
echo Autoconnect: 4
choice /M "" /C 1234
goto menu6%errorlevel%
rem ---------------IMPORT------------
:menu61
echo IMPORT
dir %cd%\wifi-configs
setlocal
set wifi_name=""
set /p wifi_name="Wifi name : " 
echo wifi is %wifi_name%
if "%wifi_name%"=="" (echo Wifi is none
powershell.exe -Command "Start-Sleep -MilliSeconds 500"
cls
goto menu6)
echo importing
netsh wlan add profile filename="%cd%\wifi-configs\Wi-Fi-%wifi_name%.xml" user=all
@pause
endlocal
cls
goto menu10
rem -----------------EXPORT-------------------
:menu62
setlocal
set wifi_name=""
set /p wifi_name="Wifi name : " 
echo wifi is %wifi_name%
if "%wifi_name%"=="" (echo Wifi is none
powershell.exe -Command "Start-Sleep -MilliSeconds 500"
cls
goto menu6)

echo exporting
netsh wlan export profile name="%wifi_name%" key=clear folder="%cd%\wifi-configs"
@pause
endlocal
cls
goto menu10
rem ----------------SHOW CONFIGS--------------
:menu63
echo _____________Configs_____________
dir %cd%\wifi-configs
@pause
cls
goto menu6
rem ----------------AUTOCONNECT---------------
:menu64
echo C:\Users\antoinecarsenat\Desktop
set /p config_file_name="Config File name (Ex: A_Wifi_Name_In_Configs) : "
set /p file_directory="Autoconnect File dir (Ex: C:\a\b\c\autoconnect or start) : "

if "%file_directory%"=="start" ( 
echo Setting directory to startup folder
set /p file_name="File name : ")
if defined file_name (
set file_directory="%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\%file_name%-autoconnect")


(
echo rem file generated by batch file used to connect to networks
echo netsh wlan add profile filename="%cd%\wifi-configs\Wi-Fi-%config_file_name%.xml" user=all
echo netsh wlan connect %config_file_name%
) >%file_directory%.bat
echo File created (operation success)
powershell.exe -Command "Start-Sleep -MilliSeconds 1500"
cls
goto menu6
-----------------------END OF CONFIG WIFI WRITER -------------


rem netsh wlan export profile name="%wifi_name%" key=clear folder="%cd%\wifi-configs"
rem netsh wlan add profile filename="" user=all


rem ----- AUTOCONNECT WRITER --------
:auto-connect-writer
echo C:\Users\antoinecarsenat\Desktop
set /p file_directory="File dir (Ex: C:\a\b\c\autoconnect or start) : "

if "%file_directory%"=="start" ( 
echo Setting directory to startup folder
set /p file_name="File name : " )

if defined file_name (
set file_directory="%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\%file_name%-autoconnect")

set /p wifi_name="Wifi name : "

(
echo rem file generated by batch file used to connect to networks
echo netsh wlan connect %wifi_name%
) >%file_directory%.bat
goto menu6


--------------------------- MODULES --------------------------
:menu7
echo _____________Modules_____________
dir %cd%\Modules
echo =Install, Uninstall, List, Start=
echo use help to show help menu

:menu71
echo\
setlocal enabledelayedexpansion

set "ModuleUserCommand="
set /p "ModuleUserCommand=Enter command: "
for %%A in (%ModuleUserCommand%) do (
    if not defined command (
        set "command=%%A"
    ) else (
        if not defined argument1 (
            set "argument1=%%A"
        ) else (
            if not defined argument2 (
                set "argument2=%%A"
            ) else (
                set "argument3=%%A"
            )
        )
    )
)

rem echo Command: !command!
rem echo Argument 1: !argument1!
rem echo Argument 2: !argument2!
rem echo Argument 3: !argument3!

endlocal & set UserCommand=%command% & set "Arg1=%argument1%" & set "Arg2=%argument2%" & set "Arg3=%argument3%"
echo\
echo\



if "%UserCommand:~0,-1%"=="help" (
echo ___________help menu_____________
echo commands : install, uninstall,
echo            list, Start
echo\
echo use "command" help to get help
echo on this specific Command
@pause)

if "%UserCommand:~0,7%"=="install" (
    if "%Arg1%"=="help" (
        echo ___________install help_____________
        echo the install command is used for installing
        echo new modules and updating old modules...
        echo.
        echo Arguments : module, dir, settings
        echo.
        echo Syntax : install [module, dir, settings]  
        echo.
        echo use "command" help to get help
        echo on this specific Command
    ) else (
        echo installing %Arg1%
        @pause
    )
	start %cd%\Modules\%Arg1% %Arg2%
)




goto menu71